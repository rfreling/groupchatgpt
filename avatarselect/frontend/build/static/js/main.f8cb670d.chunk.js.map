{"version":3,"sources":["AvatarSelect.jsx","index.jsx"],"names":["withStreamlitConnection","_ref","args","defaultChosen","_useState","useState","_useState2","_slicedToArray","chosenCharacters","setChosenCharacters","useEffect","Streamlit","setFrameHeight","setComponentValue","React","createElement","style","display","flexWrap","Object","values","characters","map","character","index","chosen","includes","value","cursor","padding","border","borderRadius","textAlign","onClick","_chosenCharacters","filter","c","concat","_toConsumableArray","length","onClickCharacter","key","src","alt","display_name","title","width","height","ReactDOM","render","StrictMode","AvatarSelect","document","getElementById"],"mappings":"6MA+DeA,eA5DM,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KAChBC,EAAgB,GACtBC,EAAgDC,mBAASF,GAAcG,EAAAC,YAAAH,EAAA,GAAhEI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GAE5CI,qBAAU,kBAAMC,IAAUC,oBAE1BF,qBAAU,kBAAMC,IAAUE,kBAAkBV,KAAgB,IAgB5D,OACEW,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEC,MAAO,CACLC,QAAS,OACTC,SAAU,SAGXC,OAAOC,OAAOlB,EAAKmB,YAAYC,KAAI,SAACC,EAAWC,GAC9C,IAAMC,EAASjB,EAAiBkB,SAASH,EAAUI,OACnD,OACEb,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEC,MAAO,CACLY,OAAQ,UACRC,QAAS,OACTC,OAAQL,EACJ,sBACA,wBACJM,aAAc,MACdC,UAAW,UAEbC,QAAS,kBApCE,SAACV,GACxB,IAAIW,EAAoB1B,GAEtB0B,EADE1B,EAAiBkB,SAASH,GACRf,EAAiB2B,QAAO,SAACC,GAAC,OAAKA,IAAMb,KAExC,GAAAc,OAAAC,YAAO9B,GAAgB,CAAEe,KAGtBgB,OAAS,IAC7B9B,EAAoByB,GACpBvB,IAAUE,kBAAkBqB,IA0BHM,CAAiBjB,EAAUI,QAC1Cc,IAAKjB,EACLkB,IAAKnB,EAAkB,OACvBoB,IAAKpB,EAAUqB,aACfC,MAAOtB,EAAUqB,aACjBE,MAAM,KACNC,OAAO,gBCjDvBC,IAASC,OACPnC,IAAAC,cAACD,IAAMoC,WAAU,KACfpC,IAAAC,cAACoC,EAAY,OAEfC,SAASC,eAAe,U","file":"static/js/main.f8cb670d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { withStreamlitConnection, Streamlit } from \"streamlit-component-lib\"\n\nconst AvatarSelect = ({ args }) => {\n  const defaultChosen = []\n  const [chosenCharacters, setChosenCharacters] = useState(defaultChosen)\n\n  useEffect(() => Streamlit.setFrameHeight())\n\n  useEffect(() => Streamlit.setComponentValue(defaultChosen), [])\n\n  const onClickCharacter = (character) => {\n    let _chosenCharacters = chosenCharacters\n    if (chosenCharacters.includes(character)) {\n      _chosenCharacters = chosenCharacters.filter((c) => c !== character)\n    } else {\n      _chosenCharacters = [...chosenCharacters, character]\n    }\n\n    if (_chosenCharacters.length < 5) {\n      setChosenCharacters(_chosenCharacters)\n      Streamlit.setComponentValue(_chosenCharacters)\n    }\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {Object.values(args.characters).map((character, index) => {\n          const chosen = chosenCharacters.includes(character.value)\n          return (\n            <div>\n              <img\n                style={{\n                  cursor: \"pointer\",\n                  padding: \"12px\",\n                  border: chosen\n                    ? \"8px solid lightblue\"\n                    : \"8px solid transparent\",\n                  borderRadius: \"50%\",\n                  textAlign: \"center\",\n                }}\n                onClick={() => onClickCharacter(character.value)}\n                key={index}\n                src={character[\"avatar\"]}\n                alt={character.display_name}\n                title={character.display_name}\n                width=\"80\"\n                height=\"80\"\n              />\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default withStreamlitConnection(AvatarSelect)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport AvatarSelect from \"./AvatarSelect\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <AvatarSelect />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}